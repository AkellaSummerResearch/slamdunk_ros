#!/usr/bin/env python
PACKAGE = "slamdunk_node"

from dynamic_reconfigure.parameter_generator_catkin import *

from slamdunk_msgs.msg import ReconfigureLevels
from slamdunk_msgs.msg import VideoModes
from slamdunk_msgs.msg import VideoSources

gen = ParameterGenerator()

gen.add("crop_width", int_t, ReconfigureLevels.NODE, "The width of the crop sent through left_rgb, left_grayscale, right_rgb and right_grayscale topics", 640, 1, 1500)
gen.add("crop_height", int_t, ReconfigureLevels.NODE, "The height of the crop sent through left_rgb, left_grayscale, right_rgb and right_grayscale topics", 480, 1, 1500)

# h264 streaming
gen.add("streaming_crop_width", int_t, ReconfigureLevels.STREAMING, "The width of the crop sent through h264 streaming (0 for no crop)", 0, 0, 1500)
gen.add("streaming_crop_height", int_t, ReconfigureLevels.STREAMING, "The height of the crop sent through h264 streaming (0 for no crop)", 0, 0, 1500)
gen.add("streaming_rescale_width", int_t, ReconfigureLevels.STREAMING, "The rescale width for h264 streaming (0 for no rescale)", 0, 0, 1500)
gen.add("streaming_rescale_height", int_t, ReconfigureLevels.STREAMING, "The rescale height for h264 streaming (0 for no rescale)", 0, 0, 1500)
gen.add("streaming_host", str_t, ReconfigureLevels.STREAMING, "The target host for h264 streaming", "192.168.45.255")
gen.add("streaming_port_left", int_t, ReconfigureLevels.STREAMING, "The target port for h264 streaming, data from left camera. Set to 0 to disable left camera streaming.", 5000, 0, 65535)
gen.add("streaming_port_right", int_t, ReconfigureLevels.STREAMING, "The target port for h264 streaming, data from right camera. Set to 0 to disable right camera streaming.", 5100, 0, 65535)
gen.add("streaming_bitrate", int_t, ReconfigureLevels.STREAMING, "The target bitrate for h264 streaming", 200000, 2000, 20000000)

video_mode_enum = gen.enum([ gen.const("auto", int_t, VideoModes.MODE_AUTO, "auto-select. In live mode, defaults to: 1280*960 pixels, 30fps"),
                             gen.const("1280_960_30", int_t, VideoModes.MODE_1280_960_30, "1280*960 pixels, 30fps"),
                             gen.const("1500_1500_30", int_t, VideoModes.MODE_1500_1500_30, "1500*1500 pixels, 30fps"),
                             gen.const("1500_1500_60", int_t, VideoModes.MODE_1500_1500_60, "1500*1500 pixels, 60fps"),
                             gen.const("900_700_120", int_t, VideoModes.MODE_900_700_120, "900*700 pixels, 120fps")],
                           "An enum to set VIDEO MODE")

gen.add("video_mode", int_t, ReconfigureLevels.VIDEO_MODE, "Video Mode",
        VideoModes.MODE_1280_960_30, VideoModes.MODE_MIN, VideoModes.MODE_MAX, edit_method = video_mode_enum)


video_source_enum = gen.enum([ gen.const("live", int_t, VideoSources.SOURCE_LIVE, "live"),
                             gen.const("vdec_sw", int_t, VideoSources.SOURCE_VDEC_SW, "offline-software decoder"),
                             gen.const("vdec_hw", int_t, VideoSources.SOURCE_VDEC_HW, "offline-hardware decoder")],
                           "An enum to set VIDEO SOURCE")

gen.add("video_source", int_t, ReconfigureLevels.VIDEO_SOURCE, "Video Source",
        VideoSources.SOURCE_LIVE, VideoSources.SOURCE_MIN, VideoSources.SOURCE_MAX, edit_method = video_source_enum)

# Second argument is for docs, third argument is for filename generation (SLAMDunkNodeConfig.h)
exit(gen.generate(PACKAGE, "SLAMDunkNode", "SLAMDunkNode"))
